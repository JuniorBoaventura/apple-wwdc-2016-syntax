@import "syntax-variables";

atom-text-editor, :host {
  background-color: @bgblue;
  color: white;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: lighten(@bgblue, 4%);
  }

  .invisible-character {
    color: @grey2;
  }

  .gutter {
    background-color: @bgblue;
    color: @gutter;

    .line-number {
      &.cursor-line {
        background-color: @bgblue;
        color: @gutter;
      }

      &.cursor-line-no-selection {
        color: @gutter;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
    border-width: 2px;
  }

  .selection .region {
    background-color: @bggrey;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
  color: @light-gray;
}

.keyword {
  color: @lavender;

  &.control {
    color: @lavender;
  }

  &.operator {
    color: white;
  }

  &.other.special-method {
    color: @blue;
  }

  &.other.unit {
    color: @orange;
  }
}

.storage {
  color: @lavender;
}

.teal {
  color: @teal;

  &.character.escape {
    color: @cyan;
  }

  &.numeric {
    color: white;
  }

  &.other.color {
    color: @cyan;
  }

  &.other.symbol {
    color: @green;
  }
}

.variable {
  color: @lavender;

  &.interpolation {
    color: @red;
  }

  &.parameter.function {
    color: @pink;
  }

  &.other.property{
    color: white;
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  color: @yellow;


  &.regexp {
    color: @teal;

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @red;
  }
}

.punctuation {
  &.definition {
    &.comment {
      color: @light-gray;
    }

    &.arguments.end.bracket.round{
      color: white;
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      color: @syntax-text-color;
    }

    &.heading,
    &.identity {
      color: @blue;
    }

    &.bold {
      color: @lavender;
      font-weight: bold;
    }

    &.italic {
      color: @purple;
      font-style: italic;
    }

    &.entity{
      color: white;
    }
  }

  &.section.embedded {
    color: @red;
  }

}

.support {
  &.class {
    color: @darkpurple;
  }
  &.constant.property-value{
    color: @darkpurple;
  }

  &.variable{
    color: @orange;
  }

  &.type.property-name{
    color: @teal;
  }

  &.function  {
    color: @teal;

    &.any-method {
      color: @blue;
    }
  }
}

.entity {
  &.name.function {
    color: white;
  }
  &.name.type {
    color: @orange;
  }

  &.other.inherited-class {
    color: @green;
  }
  &.name.class, &.name.type.class {
    color: @green;
  }

  &.name.section {
    color: @blue;
  }

  &.name.tag {
    color: @pink;
  }

  &.other.attribute-name {
    color: @yellow;

    &.id {
      color: @blue;
    }

    &.pseudo-class{
      color: @orange;
    }

    &.pseudo-element{
      color: @orange;
    }
  }
}

.meta {
  color: @teal;
  &.at-rule{
    color: white;
  }
  &.class {
    color: @orange;
  }

  &.link {
    color: @orange;
  }

  &.require {
    color: @blue;
  }

  &.selector {
    color: white;
  }

  &.separator {
    background-color: @gray;
    color: white;
  }

  &.brace{
    color: white;
  }
  &.delimiter{
    color: white;
  }
  &.operator{
    color: white;
  }
  &.property-value{
    color: @darkpurple;
  }
  &.tag{
    color: white;
  }
  &.arguments{
    color: @orange;
  }
  &.function-call .name.function{
    color: @orange;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @orange;
    font-weight: bold;
  }

  &.changed {
    color: @purple;
  }

  &.deleted {
    color: @green;
  }

  &.italic {
    color: @orange;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @blue;
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @green;
  }

  &.quote {
    color: @orange;
  }

  &.raw.inline {
    color: @green;
  }
}

.source{
  color: @orange;

  &.css{
    color: white;
  }
}

.source.gfm{
  color: white;
  .markup{
    &.raw{
      color: @yellow;
    }
  }
}
.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @orange;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}

.punctuation {
  &.definition.string{
    color: @yellow;
  }
  &.definition.tag{
    color: @pink;
  }
  &.definition.comment{
    color: @comment;
  }
  &.definition.entity{
    color: @yellow;
  }
  &.definition.dictionary{
    color: white;
  }
  &.definition.arguments{
    color:white;
  }
  &.terminator{
    color: white;
  }
  &.separator{
    color: white;
  }
  &.section.property-list{
    color:white;
  }
}
.comment{
  color: @comment;

  &.line{
    color: @comment;
  }
}

.variable {
  color: @pink;
  &.other.object{
    color:white;
  }
  &.language{
    color: @lavender;
  }
  &.scss{
    color: @orange;
  }
}

.line{
  color: @lavender;
}

.constant{
  &.numeric{
    color: white;
  }
}

.keyword{
  &.operator{
    color: white;
    &.new{
      color: @lavender;
    }
  }
  &.other.important{
    color: @red;
  }
}

.text.plain.null-grammar{
  color: white;
}

.text.html.basic{
  color: white;
}

.meta.property-value{
  color:White;
}

.tooltip{
  background-color: white;
  &.bottom .tooltip-arrow{
    border-bottom-color: white !important;
    position: relative;
    top: -10px;

  }
  .tooltip-inner{
    background-color: white !important;
    color: @bgblue !important;
    position: relative;
    top: -2px;
  }
}
.markup.underline.link{
  color: @darkpurple;
  text-decoration: underline;
}

.variable {
  &.ordered.list.gfm {
    color: @teal;
  }

  &.unordered.list.gfm {
    color: @teal;
  }
}


.meta.method-call .entity.name.function.js{
  color: @teal;
}

.meta.function-call {

  .entity.name.function{
    color: @teal !important;
  }
}

.meta.arguments{
  .support.constant.dom{
    color: @teal;
  }
}

.ruby{
  &.source{
    color: white;
  }
  &.entity.name.type.class{
    color: @pink;
  }
  &.entity.other.inherited-class{
    color: @pink;
  }
  &.variable.other{
    color: @orange;
  }
  &.support.class{
    color: @orange;
  }

  .constant{
    &.other.symbol{
      color: @darkpurple;
    }
  }

  .punctuation{
    color: white;

    &.definition.constant{
      color: @darkpurple;
    }
    &.definition.variable{
      color: @orange;
    }
  }
  &.keyword.other{
    color: @purple;
  }
}

.java{
  .entity.name.class{
    color: @purple;
  }
  .storage.type{
    color: @orange;
  }
  .entity.name.function{
    color: @orange;
  }
  .meta.method{
    color: @orange;
    &.body{
      color: @orange;
    }
  }
  .variable.parameter{
    color: @orange;
  }

}

.punctuation{
  color: white;
}

.constant.language{
  color: @green;
}

.html{
  &.entity.other.attribute-name{
    color: @orange;
  }
  &.meta.toc-list.id{
    color: @yellow;
  }
  &.meta.scope.between-tag-pair{
    color: @pink;
  }
  &.meta.tag.block.any{
    color: @pink;
  }
}

.gfm{
  .constant.character.escape{
    color: @teal;
  }
}
